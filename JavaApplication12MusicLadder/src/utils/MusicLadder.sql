DROP TABLE ML_SONG_SINGER_TBL;
DROP TABLE ML_SINGER_TBL;
DROP SEQUENCE singer_id;
DROP TABLE ML_DUEL_TBL;
DROP SEQUENCE duel_id;
DROP TABLE ML_SONG_RANKING_TBL;
DROP TABLE ML_SONG_TBL;
DROP SEQUENCE song_id;
DROP TABLE ML_SUBLADDER_TBL;
DROP SEQUENCE subladder_id;
DROP TABLE ML_LADDER_TBL;
DROP SEQUENCE ladder_id;

--missing stuff : genres / song country / singer country
--NB : Genre is different from ladder (or should it be different? - TO DESIDE)

--Will use a single ladder for version 1.0
CREATE SEQUENCE ladder_id
  MINVALUE 1
  MAXVALUE 99999999999999
  START WITH 1
  INCREMENT BY 1;

CREATE TABLE ML_LADDER_TBL (
  ladder_id NUMBER PRIMARY KEY,
  ladder_name VARCHAR(255) NOT NULL,
  ladder_path VARCHAR(500) NOT NULL
);

CREATE SEQUENCE subladder_id
  MINVALUE 1
  MAXVALUE 99999999999999
  START WITH 1
  INCREMENT BY 1;

CREATE TABLE ML_SUBLADDER_TBL (
  subladder_id NUMBER PRIMARY KEY,
  ladder_id NUMBER NOT NULL REFERENCES ML_LADDER_TBL
);
--end

CREATE SEQUENCE song_id
  MINVALUE 1
  MAXVALUE 99999999999999
  START WITH 1
  INCREMENT BY 1;

CREATE TABLE ML_SONG_TBL(
  song_id NUMBER PRIMARY KEY,
  song_name VARCHAR2(255) UNIQUE NOT NULL,
  song_youtube_link VARCHAR(255),
  song_ladder NUMBER NOT NULL REFERENCES ML_LADDER_TBL(ladder_id),
  song_wins NUMBER,
  song_draws NUMBER,
  song_losses NUMBER
);

CREATE TABLE ML_SONG_RANKING_TBL (
  song_id NUMBER PRIMARY KEY REFERENCES ML_SONG_TBL(song_id),
  song_currentRating NUMBER(9,5),
  song_previousRating NUMBER(9,5),
  song_rankChange NUMBER(5)
);

CREATE SEQUENCE duel_id
  MINVALUE 1
  MAXVALUE 99999999999999
  START WITH 1
  INCREMENT BY 1;

CREATE TABLE ML_DUEL_TBL (
   duel_id NUMBER PRIMARY KEY,
   song1_id NUMBER NOT NULL REFERENCES ML_SONG_TBL(song_id),
   song2_id NUMBER NOT NULL REFERENCES ML_SONG_TBL(song_id),
   song1_rating_before NUMBER(9,5) NOT NULL,
   song2_rating_before NUMBER(9,5) NOT NULL,
   song1_score NUMBER(2),
   song2_score NUMBER(2),
   song1_rating_after NUMBER(9,5),
   song2_rating_after NUMBER(9,5),
   duel_time DATE NOT NULL
);

--Will not be used for version 1.0
CREATE SEQUENCE singer_id
  MINVALUE 1
  MAXVALUE 99999999999999
  START WITH 1
  INCREMENT BY 1;
  
CREATE TABLE ML_SINGER_TBL (
  singer_id NUMBER PRIMARY KEY,
  singer_name VARCHAR(255) NOT NULL
);

CREATE TABLE ML_SONG_SINGER_TBL (
  song_id NOT NULL REFERENCES ML_SONG_TBL(song_id),
  singer_id NOT NULL REFERENCES ML_SINGER_TBL(singer_id),
  PRIMARY KEY (song_id, singer_id)
);
--end

INSERT INTO ML_LADDER_TBL VALUES(ladder_id.nextval, 'cool ladder', '/home/go/here');

INSERT INTO ML_SONG_TBL VALUES (song_id.nextval, 'blah blah', '', 1, 5, 3, 8);
INSERT INTO ML_SONG_TBL VALUES (song_id.nextval, 'song 2', '', 1, 5, 3, 8);
INSERT INTO ML_SONG_TBL VALUES (song_id.nextval, 'blah blah 2 ', '', 1, 5, 3, 8);
INSERT INTO ML_SONG_TBL VALUES (song_id.nextval, 'song', '', 1, 5, 3, 8);

INSERT INTO ML_SONG_RANKING_TBL VALUES ( 1, 1200, 1000, 3);
INSERT INTO ML_SONG_RANKING_TBL VALUES ( 2, 1200.123456, 1000.1234, -5);
INSERT INTO ML_SONG_RANKING_TBL VALUES ( 3, 1200.3333359, 1000.1234977, -13);
INSERT INTO ML_SONG_RANKING_TBL VALUES ( 4, 1200.3333359, 1000.1233877, 1);